[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PhD: People-Like-Me",
    "section": "",
    "text": "This is a Quarto book for People-Like-Me project."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code for Randy’s PhD dissertation."
  },
  {
    "objectID": "0_todo.html",
    "href": "0_todo.html",
    "title": "Working log",
    "section": "",
    "text": "May 2024",
    "crumbs": [
      "Working log"
    ]
  },
  {
    "objectID": "0_todo.html#may-2024",
    "href": "0_todo.html#may-2024",
    "title": "Working log",
    "section": "",
    "text": "2024-05-15\n\ncommittee meeting date 21 24 25 of May 27 28th\nthe proposal for the PhD\nasking Brandie for University policy Stef\nsend email to Stef by Monday.\nYou are cat’s meow!\n\n\nCodepraise::praise()\n\n[1] \"You are premium!\"",
    "crumbs": [
      "Working log"
    ]
  },
  {
    "objectID": "02_nonlinear.html",
    "href": "02_nonlinear.html",
    "title": "\n1  Non-linear\n",
    "section": "",
    "text": "1.1 Nonlinear simulation\nThe simulation is based on the Preece-Baines Model:\n\\[\nh(t; \\theta) = h_{max} - \\frac {2(h_{max} - h_\\theta)}\n{e^{s_0(t- \\theta)} +  e^{s_1(t- \\theta)}}\n\\]\nHowever some of the combinations of the parameters are not realistic, so we need to filter out the unrealistic values.\nCodeNid &lt;- rpois(20000, 20)\nNtime &lt;- map(Nid, ~rnorm(.x, 0.8, 0.3) %&gt;%\n                 abs() %&gt;%\n                 as.data.frame())\n\ndata0 &lt;- cbind(id = 1:20000,\n               group = rep(c(\"training\", \"testing\"), by = 10000),\n               gap = Ntime,\n               sex = rep(c(\"male\", \"female\"), each = 10000)) %&gt;%\n    as.data.frame() %&gt;%\n    mutate(hmax = c(rnorm(10000, 175, 10),\n                    rnorm(10000, 160, 11)),\n           hd = c(rnorm(10000, 20, 4),\n                  rnorm(10000, 20, 6.5)),\n           rate = runif(20000, 5.8, 11),\n           s1 = c(abs(rnorm(10000, 0.85, 0.1)),\n                  abs(rnorm(10000, 0.75, 0.1))),\n           theta = c(runif(10000, 11, 17),\n                     runif(10000, 10, 15))) %&gt;%\n    mutate(s0 = s1 / rate,\n           h3 = hmax - 2 * hd / (exp(s0 *(3 - theta)) + exp(s1 * (3 - theta))),\n           h10 = hmax - 2 * hd/ (exp(s0 *(10 - theta)) + exp(s1 * (10 - theta))),\n           h20 = hmax - 2 * hd / (exp(s0 *(20 - theta)) + exp(s1 * (20 - theta))),\n           sex = unlist(sex),\n           group = unlist(group),\n           id = as.character(unlist(id))) %&gt;%\n    filter(h3 &gt; 80,\n           h3 &lt; 106,\n           hd &gt; 15,\n           h10 &gt; 100,\n           h20 &lt; hmax) %&gt;%\n  group_by(group, sex) %&gt;%\n  slice_sample(n = 250L) %&gt;%\n  ungroup()\n\nsimulation &lt;- data0 %&gt;%\n    unnest(gap) %&gt;%\n    dplyr::select(gap = 3, everything()) %&gt;%\n    group_by(id) %&gt;%\n    mutate(time = lag(cumsum(gap), default = 0) + 3) %&gt;%\n    ungroup() %&gt;%\n    filter(time &lt;= 20) %&gt;%\n    mutate(resid = rnorm(n(), 0, 1.5),\n           ht = hmax - 2 * hd /\n               (exp(s0 *(time - theta)) + exp(s1 * (time - theta))) + resid) %&gt;%\n  as.data.frame() %&gt;%\n  mutate(time1 = as.numeric(time)) %&gt;%\n  mutate(time = round(time1, 1)) %&gt;%\n  dplyr::select(ht, id, sex, time, group)\n\nremove(data0)\nremove(Nid)\nremove(Ntime)\nHere are the plots for different individuals.\nCodesimulation %&gt;%\n  ggplot(aes(x = time, y = ht)) +\n  geom_line(aes(group = id), \n            color = \"darkblue\",\n            alpha = 0.1) +\n  geom_smooth(aes(group = sex), \n              color = c(\"indianred\"),\n              method = \"loess\",\n              se = FALSE) +\n  facet_wrap(~sex) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\nCodeload(\"result/S02_nonlinear_sim1000_ss1000_anchor3_0summary_2024-05-16.Rdata\")\n\nsim_ss %&gt;% \n  dplyr::select(term, lmm,\n                sgl_n,\n                everything()) %&gt;% \n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nlmm\nsgl_n\neld_n\nmhl_n\nmhl_p75\nmhl_p80\nmhl_p85\nmhl_p90\nmhl_p95\n\n\n\nbias\n6.2695\n6.7484\n6.1822\n6.1822\n6.1577\n6.1316\n6.1036\n6.0775\n6.0621\n\n\nmse\n70.0905\n78.2698\n71.6614\n71.6614\n68.8789\n68.6038\n68.3511\n68.2174\n68.1447\n\n\ncoverage50\n0.4828\n0.4156\n0.4495\n0.4495\n0.5242\n0.5255\n0.523\n0.5189\n0.5119\n\n\ncoverage80\n0.7751\n0.7117\n0.709\n0.709\n0.8041\n0.8031\n0.8032\n0.8027\n0.7989\n\n\ncoverage90\n0.8852\n0.8221\n0.816\n0.816\n0.9011\n0.8987\n0.8982\n0.8951\n0.8921\nHere is the code to transfer the data from the server:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Non-linear</span>"
    ]
  },
  {
    "objectID": "00_todo.html",
    "href": "00_todo.html",
    "title": "Working log",
    "section": "",
    "text": "May 2024",
    "crumbs": [
      "Working log"
    ]
  },
  {
    "objectID": "00_todo.html#may-2024",
    "href": "00_todo.html#may-2024",
    "title": "Working log",
    "section": "",
    "text": "2024-05-16 You are groovy!\n\ncommittee meeting date before the evaluation date Jun 28th\nthe proposal for the PhD thesis\nadd the nonlinear simulation to the methods\n2024-05-15 You are great!\n\ncommittee meeting date 21 24 25 of May 27 28th\nthe proposal for the PhD\nasking Brandie for University policy Stef\nsend email to Stef by Monday.",
    "crumbs": [
      "Working log"
    ]
  },
  {
    "objectID": "02_nonlinear.html#nonlinear-simulation",
    "href": "02_nonlinear.html#nonlinear-simulation",
    "title": "\n1  Non-linear\n",
    "section": "",
    "text": "\\(\\theta\\) is the age at peak velocity in year\n\n\\(s_0\\) and \\(s_1\\) are the prepubertal and pubertal rate constants controlling growth velocity, respectively, in cm/yr\n\n\n\\(t\\) is the age in years\n\n\\(h_{max}\\) estimated mature or final size in cm\n\n\n\\(h_{theta}\\) height at age \\(\\theta\\) in cm\n\n\n\n\n\n\n\n\nrsync -a goodgolden_555\\@ap21.uc.osg-htc.org:/home/goodgolden_555/nlm/result result/nonlinear_sim1000_ss1000_anchor3",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Non-linear</span>"
    ]
  },
  {
    "objectID": "02_nonlinear.html#simulations",
    "href": "02_nonlinear.html#simulations",
    "title": "\n1  Non-linear\n",
    "section": "\n1.2 1000 simulations",
    "text": "1.2 1000 simulations\n\nCodefolder2 &lt;- \"result\"\nfolder1 &lt;- \"nonlinear_sim1000_ss1000_anchor3\"\n\nfile_location &lt;- paste0(\"result/\", folder1, \"/\", folder2, \"/\")\nfiles &lt;- list.files(path = file_location, pattern = \".Rdata\")\nfiles &lt;- files[1:1000]\n## pull out the simulation results from the folder each as a list of\n## bias, rmse, coverage50, coverage80, and coverage90\nsim_ss &lt;- map_dfr(files, ~pull_simulation(file_location, .),\n                     .progress = list(type = \"iterator\",\n                                      format = \"Calculating {cli::pb_bar} {cli::pb_percent}\",\n                                      clear = TRUE))\nsim_ss &lt;- sim_ss %&gt;%\n  mutate(term = rep(c(\"bias\", \"mse\", \n                      \"coverage50\", \n                      \"coverage80\", \n                      \"coverage90\"), \n                    length(files)))\n\nsave(sim_ss, file = paste0(\"result/\", folder1, \"/S02_\", folder2,\n                           \"_0summary_\", Sys.Date(), \n                           \"_part2.Rdata\"))\n\n\n\nCodeload(\"result/nonlinear_sim1000_ss1000_anchor3/S02_result_0summary_2024-05-16_part1.Rdata\")\nfolder2 &lt;- \"nonlinear_sim1000_ss1000_anchor3\"\ndata &lt;- sim_ss %&gt;%\n  pivot_longer(cols = -term,\n               names_to = \"method\",\n               values_to = \"values\") %&gt;%\n  mutate(method = factor(method, \n                         levels = c(\"sgl_n\", \"eld_n\", \"mhl_n\", \n                                    \"mhl_p75\", \"mhl_p80\", \"mhl_p85\",\n                                    \"mhl_p90\", \"mhl_p95\", \"lmm\")))\n\n\n\nCodebias_plot &lt;- data %&gt;%\n  filter(term == \"bias\") %&gt;%\n  ggplot(aes(x = method,\n             y = as.numeric(values), \n             group = factor(method))) +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"eld_n\" = parse(text = latex2exp::TeX(\"$E_{\\\\kappa = 10}$\")),\n                              \"mhl_n\" = parse(text = latex2exp::TeX(\"$M_{\\\\kappa = 10}$\")),\n                              \"mhl_p75\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.75}$\")),\n                              \"mhl_p80\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.80}$\")),\n                              \"mhl_p85\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.85}$\")),\n                              \"mhl_p90\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.90}$\")),\n                              \"mhl_p95\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.95}$\")),\n                              \"lmm\" = \"LMM\")) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"Bias\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16))\n\n\n\nCodermse_plot &lt;- data %&gt;%\n  filter(term == \"mse\") %&gt;% \n  mutate(values = sqrt(as.numeric(values))) %&gt;%\n  ggplot(aes(x = method, y = as.numeric(values), group = method)) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"RMSE\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"eld_n\" = parse(text = latex2exp::TeX(\"$E_{\\\\kappa = 10}$\")),\n                              \"mhl_n\" = parse(text = latex2exp::TeX(\"$M_{\\\\kappa = 10}$\")),\n                              \"mhl_p75\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.75}$\")),\n                              \"mhl_p80\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.80}$\")),\n                              \"mhl_p85\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.85}$\")),\n                              \"mhl_p90\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.90}$\")),\n                              \"mhl_p95\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.95}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16))\n\n\n\nCodecov50_plot &lt;- data %&gt;% \n  filter(term == \"coverage50\") %&gt;% \n  ggplot(aes(x = method, y = as.numeric(values)),\n         group = method) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"50% CR\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"eld_n\" = parse(text = latex2exp::TeX(\"$E_{\\\\kappa = 10}$\")),\n                              \"mhl_n\" = parse(text = latex2exp::TeX(\"$M_{\\\\kappa = 10}$\")),\n                              \"mhl_p75\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.75}$\")),\n                              \"mhl_p80\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.80}$\")),\n                              \"mhl_p85\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.85}$\")),\n                              \"mhl_p90\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.90}$\")),\n                              \"mhl_p95\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.95}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n\n\n\nCodecov80_plot &lt;- data %&gt;% \n          filter(term == \"coverage80\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n         labs(x = NULL) +\n          labs(y = \"80% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"eld_n\" = parse(text = latex2exp::TeX(\"$E_{\\\\kappa = 10}$\")),\n                              \"mhl_n\" = parse(text = latex2exp::TeX(\"$M_{\\\\kappa = 10}$\")),\n                              \"mhl_p75\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.75}$\")),\n                              \"mhl_p80\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.80}$\")),\n                              \"mhl_p85\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.85}$\")),\n                              \"mhl_p90\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.90}$\")),\n                              \"mhl_p95\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.95}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n\n\n\nCodecov90_plot &lt;- data %&gt;% \n          filter(term == \"coverage90\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n          labs(x = NULL) +\n          labs(y = \"90% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"eld_n\" = parse(text = latex2exp::TeX(\"$E_{\\\\kappa = 10}$\")),\n                              \"mhl_n\" = parse(text = latex2exp::TeX(\"$M_{\\\\kappa = 10}$\")),\n                              \"mhl_p75\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.75}$\")),\n                              \"mhl_p80\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.80}$\")),\n                              \"mhl_p85\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.85}$\")),\n                              \"mhl_p90\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.90}$\")),\n                              \"mhl_p95\" = parse(text = latex2exp::TeX(\"$M_{\\\\alpha = 0.95}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n\n\n\n1.2.1 BIAS\n\nCodebias_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_1bias_\", Sys.Date(), \".png\"))\n\n\n\n1.2.2 RMSE\n\nCodermse_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_2rmse_\", Sys.Date(), \".png\"))\n\n\n\n1.2.3 CR50\n\nCodecov50_plot + \n  geom_hline(yintercept = 0.5, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_3cov50_\", Sys.Date(), \".png\"))\n\n\n\n1.2.4 CR80\n\nCodecov80_plot +\n  geom_hline(yintercept = 0.8, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_4cov80_\", Sys.Date(), \".png\"))\n\n\n\n1.2.5 CR90\n\nCodecov90_plot +\n  geom_hline(yintercept = 0.9, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_5cov90_\", Sys.Date(), \".png\"))\n\n\n\n1.2.6 Combined\n\nCodelibrary(ggpubr)\nfigure1 &lt;- ggarrange(bias_plot, \n                    # + theme(axis.text.x=element_blank()),\n                    rmse_plot,\n                    # + theme(axis.text.x=element_blank()),\n                    # cov50_plot,\n                    # + theme(axis.text.x=element_blank()), \n                    cov90_plot +\n                      geom_hline(yintercept = 0.9,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()),\n                    ncol = 1, nrow = 3)\n\nfigure1\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_6combine_\", Sys.Date(), \".png\"))\n\n\n\n1.2.7 All\n\nCodefigure2 &lt;- ggarrange(bias_plot, \n                    # + theme(axis.text.x=element_blank()),\n                    rmse_plot,\n                    # + theme(axis.text.x=element_blank()),\n                    cov50_plot +\n                      geom_hline(yintercept = 0.5,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    cov80_plot +\n                      geom_hline(yintercept = 0.8,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()), \n                    cov90_plot +\n                      geom_hline(yintercept = 0.9,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()),\n                    ncol = 1, nrow = 5)\n\nfigure2\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_7all_\", Sys.Date(), \".png\"))\n\n\n\n1.2.8 CRs\n\nCodefigure3 &lt;- ggarrange(#bias_plot, \n                    # + theme(axis.text.x=element_blank()),\n                    #rmse_plot,\n                    # + theme(axis.text.x=element_blank()),\n                    cov50_plot +\n                      geom_hline(yintercept = 0.5,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    cov80_plot +\n                      geom_hline(yintercept = 0.8,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()), \n                    cov90_plot +\n                      geom_hline(yintercept = 0.9,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()),\n                    ncol = 1, nrow = 3)\n\nfigure3\n\n\n\n\n\n\nCodeggsave(paste0(\"figure/S02_\", folder2, \"_8cr_\", Sys.Date(), \".png\"))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Non-linear</span>"
    ]
  },
  {
    "objectID": "01_table1.html",
    "href": "01_table1.html",
    "title": "\n1  Table1\n",
    "section": "",
    "text": "1.1 Goal for this chapter\nCode## set seed\nset.seed(555)\n# load(\"data/sysdata.rda\")\n\n# the code to prepare for\n# epic, demog, test and train\n# data0, data1, and data2\n# they are all saved in sysdata.rda files\ndata &lt;- left_join(epic, demog, by = \"id\") %&gt;%\n  mutate(sex = as.factor(sex))\ntest_id &lt;- unique(test$id) %&gt;% unlist()\ntrain_id &lt;- unique(train$id) %&gt;% unlist()\n\ndata0 &lt;- data %&gt;%\n  mutate(group = case_when(id %in% test_id ~ \"testing\",\n                           TRUE ~ \"training\"))\ndata1 &lt;- data0 %&gt;%\n  group_by(id, group) %&gt;%\n  summarize(age_mean = mean(age),\n            age_min = min(age),\n            age_max = max(age),\n            age_n = length(age),\n            visitn = n(),\n            h_mean = mean(ht),\n            h_max = max(ht),\n            h_min = min(ht),\n            w_mean = mean(wt),\n            w_max = max(wt),\n            w_min = min(wt),\n            sex = sex,\n            genotype = genotype,\n            ethnic = ethnic,\n            race = race) %&gt;%\n  ungroup() %&gt;%\n  unique()\n\n# working dataset\ndata2 &lt;- full_join(data1, data,\n                   by = join_by(id, sex, genotype, ethnic, race)) %&gt;%\n  as.data.frame() %&gt;%\n  mutate(time = age - age_min,\n         age_diff = age_max - age_min)\n\nwrite.csv(data1, file = paste0(\"data/S01_table1_dataset_randy_\", Sys.Date(), \".csv\"))\nwrite.csv(data2, file = paste0(\"data/S01_epic_clean_randy_\", Sys.Date(), \".csv\"))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Table1</span>"
    ]
  },
  {
    "objectID": "03_single_anchor.html",
    "href": "03_single_anchor.html",
    "title": "\n3  Single Anchor Time\n",
    "section": "",
    "text": "3.1 Goal for this chapter",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single Anchor Time</span>"
    ]
  },
  {
    "objectID": "03_single_anchor.html#goal-for-this-chapter",
    "href": "03_single_anchor.html#goal-for-this-chapter",
    "title": "\n3  Single Anchor Time\n",
    "section": "",
    "text": "to rewrite the function for single anchor time plm\n\nthe function is in R/04_plm.R\nother functions need to be updated\n\n\ncross-validation for time\ncross-validation for matching numbers\ncomparison for plm and lmm\nsimulation study for nonlinear datasets (1000 datasets)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single Anchor Time</span>"
    ]
  },
  {
    "objectID": "03_single_anchor.html#single-anchor-time-plm",
    "href": "03_single_anchor.html#single-anchor-time-plm",
    "title": "\n3  Single Anchor Time\n",
    "section": "\n3.2 Single-Anchor-Time PLM",
    "text": "3.2 Single-Anchor-Time PLM\nHere is the function to run the single anchor time for the linear model. The code, for cross validation for different number of matches and different anchor time, is in the file 01_single_anchor_R.\n\nCodeload(\"~/Desktop/plmphd/R/train_test.rda\")\ntrain1 &lt;- train %&gt;%\n  group_by(id) %&gt;%\n  summarise(ht0 = min(ht),\n            age0 = min(age))\n\ntrain2 &lt;- full_join(train, train1, by = \"id\") %&gt;%\n  mutate(sid = \"S\") %&gt;%\n  unite(id, sid, id, sep = \"\") \n\ntest1 &lt;- test %&gt;%\n  group_by(id) %&gt;%\n  summarise(ht0 = min(ht),\n            age0 = min(age))\n\ntest2 &lt;- full_join(test, test1, by = \"id\") %&gt;%\n  mutate(sid = \"S\") %&gt;%\n  unite(id, sid, id, sep = \"\") \n\nbsk &lt;- c(3, 6, 9, 12)\nat &lt;- 10\nmn &lt;- 15\n\nlf &lt;- \"ht ~ sex + sex:ht0 + \n              age + age:ht0 + \n              genotype + genotype:ht0 + \n              ethnic + ethnic:ht0 + ht0\"\n\ngf &lt;- \"ht ~ cs(time, df = 3)\"\ngs &lt;- \"~ cs(time, df = 1)\"\n\nplm_s_t10_n15 &lt;- \n  plm_single(train_data = train2,\n             test_data = test2,\n             outcome_var = \"ht\",\n             time_var = \"time\",\n             id_var = \"id\",\n             tmin = 3,\n             tmax = 17,\n             brokenstick_knots = bsk,\n             anchor_time = at,\n             linear_formula = lf,\n             gamlss_formula = gf,\n             gamlss_sigma = gs,\n             match_number = mn,\n             match_plot = FALSE,\n             predict_plot = FALSE)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single Anchor Time</span>"
    ]
  },
  {
    "objectID": "03_single_anchor.html#summary-for-the-cross-validation",
    "href": "03_single_anchor.html#summary-for-the-cross-validation",
    "title": "\n3  Single Anchor Time\n",
    "section": "\n3.3 Summary for the cross validation",
    "text": "3.3 Summary for the cross validation\n\nCodemeanout &lt;- function(dataset,\n                    term = c(\"bias\", \"mse\", \"coverage50\",\n                             \"coverage80\", \"coverage90\"),\n                    ...){\n  result &lt;- dataset %&gt;%\n    map(\"centiles_observed\")\n  if (term != \"mse\") {\n    result &lt;- result %&gt;%\n      map(term) %&gt;%\n      map(~mean(., na.rm = TRUE)) %&gt;%\n      unlist() %&gt;%\n      mean()\n  } else {\n    result &lt;- result %&gt;%\n      map(~.$bias ^2) %&gt;%\n      map(~mean(., na.rm = TRUE)) %&gt;%\n      unlist() %&gt;%\n      mean()\n  }\n  return(result)\n}\n\n\nmeanall &lt;- function(dataset,\n                    ...){\n  bias &lt;- meanout(dataset, \"bias\")\n  mse &lt;- meanout(dataset, \"mse\")\n  cov50 &lt;- meanout(dataset, \"coverage50\")\n  cov80 &lt;- meanout(dataset, \"coverage80\")\n  cov90 &lt;- meanout(dataset, \"coverage90\")\n  return(list(bias = bias,\n              mse = mse,\n              cov50 = cov50,\n              cov80 = cov80,\n              cov90 = cov90))\n}\n\n\nsummary_s_t12 &lt;- summary_s_t12 %&gt;%\n  mutate(nmatch = 1:50)\n\nsave(summary_s_n10, \n     summary_s_n15,\n     summary_s_n20,\n     summary_s_n25, \n     summary_s_n30,\n     summary_s_t12,\n     file = paste0(\"results/summary_all_tn_\",\n                   Sys.Date(),\n                   \".rdata\"))\n\n\n\n3.3.1 summary and figures for t11\nHere we show the summary of the cross validation for different number of matches and different anchor time. The best is for matching number is around 25 to 30.\n\nCodeload(\"results/summary_all_tn_2024-08-06.rdata\")\n\nprint(summary_s_n30)\n\n#&gt; # A tibble: 13 × 6\n#&gt;     bias   mse cov50 cov80 cov90  time\n#&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n#&gt;  1  2.85  17.4 0.525 0.811 0.896     3\n#&gt;  2  2.85  17.2 0.524 0.808 0.895     4\n#&gt;  3  2.87  17.4 0.524 0.807 0.891     5\n#&gt;  4  2.88  17.5 0.523 0.807 0.889     6\n#&gt;  5  2.93  17.9 0.511 0.803 0.890     7\n#&gt;  6  3.02  18.5 0.498 0.797 0.888     8\n#&gt;  7  3.05  18.8 0.495 0.793 0.888     9\n#&gt;  8  2.88  17.2 0.522 0.805 0.892    10\n#&gt;  9  2.82  16.5 0.523 0.806 0.895    11\n#&gt; 10  2.99  17.3 0.497 0.805 0.894    12\n#&gt; 11  3.19  19.0 0.490 0.801 0.896    13\n#&gt; 12  3.29  19.7 0.502 0.801 0.903    14\n#&gt; 13  3.49  21.6 0.498 0.803 0.903    15\n\nCodes_t12bias &lt;- summary_s_t12 %&gt;%\n  ggplot() +\n  geom_line(aes(x = nmatch, y = bias), \n            color = \"#005d5d\") \ns_t12mse &lt;- summary_s_t12 %&gt;%\n  mutate(rmse = sqrt(mse)) %&gt;%\n  ggplot() +\n  # geom_line(aes(x = nmatch, y = bias), color = \"blue\") +\n  geom_line(aes(x = nmatch, y = rmse),\n            color = \"#750e13\") \ns_t12cr50 &lt;- summary_s_t12 %&gt;% \n  ggplot() +\n  geom_line(aes(x = nmatch, y = cov50), \n            color = \"#0288D1\") \ns_t12cr80 &lt;- summary_s_t12 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = nmatch, y = bias), color = \"blue\") +\n  geom_line(aes(x = nmatch, y = cov80),\n            color = \"#0277BD\") \ns_t12cr90 &lt;- summary_s_t12 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = nmatch, y = bias), color = \"blue\") +\n  geom_line(aes(x = nmatch, y = cov90), \n            color = \"#01579B\")\n\n\n\nCodes_t12bias + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"MAE\") + xlab(\"Number of Matches\")\n\n\n\n\n\n\nCodes_t12mse + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"RMSE\") + xlab(\"Number of Matches\")\n\n\n\n\n\n\nCodes_t12cr50 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR50%\") + xlab(\"Number of Matches\")\n\n\n\n\n\n\nCodes_t12cr80 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR80%\") + xlab(\"Number of Matches\")\n\n\n\n\n\n\nCodes_t12cr90 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR90%\") + xlab(\"Number of Matches\")\n\n\n\n\n\n\n\n\nCodes_n10bias &lt;- summary_s_n10 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = bias), \n            color = \"#005d5d\") \ns_n10mse &lt;- summary_s_n10 %&gt;%\n  mutate(rmse = sqrt(mse)) %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = rmse),\n            color = \"#750e13\") \ns_n10cr50 &lt;- summary_s_n10 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = cov50), \n            color = \"#0288D1\") \ns_n10cr80 &lt;- summary_s_n10 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov80),\n            color = \"#0277BD\") \ns_n10cr90 &lt;- summary_s_n10 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov90), \n            color = \"#01579B\")\n\ns_n10bias + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"MAE\") + xlab(\"Number of Matches\")\ns_n10mse + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"RMSE\") + xlab(\"Number of Matches\")\ns_n10cr50 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR50%\") + xlab(\"Number of Matches\")\ns_n10cr80 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR80%\") + xlab(\"Number of Matches\")\ns_n10cr90 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR90%\") + xlab(\"Number of Matches\")\n\n\nHere we show the color from dark to light: matching number as 10, 15, 20, 25, 30 for anchor time 12.\n\nCodes_n20bias &lt;- summary_s_n20 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = bias), \n            color = \"#005d5d\") \ns_n20mse &lt;- summary_s_n20 %&gt;%\n  mutate(rmse = sqrt(mse)) %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = rmse),\n            color = \"#750e13\") \ns_n20cr50 &lt;- summary_s_n20 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = cov50), \n            color = \"#0288D1\") \ns_n20cr80 &lt;- summary_s_n20 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov80),\n            color = \"#0277BD\") \ns_n20cr90 &lt;- summary_s_n20 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov90), \n            color = \"#01579B\")\n\ns_n20bias + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"MAE\") + xlab(\"Number of Matches\")\ns_n20mse + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"RMSE\") + xlab(\"Number of Matches\")\ns_n20cr50 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR50%\") + xlab(\"Number of Matches\")\ns_n20cr80 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR80%\") + xlab(\"Number of Matches\")\ns_n20cr90 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR90%\") + xlab(\"Number of Matches\")\n\n\n\nCodes_n30bias &lt;- summary_s_n30 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = bias), \n            color = \"#005d5d\") \ns_n30mse &lt;- summary_s_n30 %&gt;%\n  mutate(rmse = sqrt(mse)) %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = rmse),\n            color = \"#750e13\") \ns_n30cr50 &lt;- summary_s_n30 %&gt;% \n  ggplot() +\n  geom_line(aes(x = time,  y = cov50), \n            color = \"#0288D1\") \ns_n30cr80 &lt;- summary_s_n30 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov80),\n            color = \"#0277BD\") \ns_n30cr90 &lt;- summary_s_n30 %&gt;%\n  ggplot() +\n  # geom_line(aes(x = time,  y = bias), color = \"blue\") +\n  geom_line(aes(x = time,  y = cov90), \n            color = \"#01579B\")\n\ns_n30bias + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"MAE\") + xlab(\"Number of Matches\")\ns_n30mse + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"RMSE\") + xlab(\"Number of Matches\")\ns_n30cr50 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR50%\") + xlab(\"Number of Matches\")\ns_n30cr80 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR80%\") + xlab(\"Number of Matches\")\ns_n30cr90 + theme_bw() + theme(legend.position = \"none\") + \n  ylab(\"CR90%\") + xlab(\"Number of Matches\")\n\n\n\nCodes_nbias &lt;- ggplot() +\n  geom_line(data = summary_s_n10, \n            aes(x = time,  y = bias), \n            color = \"#01579b\") +\n    geom_line(data = summary_s_n15, \n            aes(x = time,  y = bias), \n            color = \"#0277bd\") +\n    geom_line(data = summary_s_n20, \n            aes(x = time,  y = bias), \n            color = \"#0288d1\") +\n    geom_line(data = summary_s_n25, \n            aes(x = time,  y = bias), \n            color = \"#039be5\") +\n    geom_line(data = summary_s_n30, \n            aes(x = time,  y = bias), \n            color = \"#04c3f4\") +\n  theme_bw() + # theme(legend.position = \"none\") + \n  ylab(\"MAE\") + xlab(\"Anchor Time\")\n\ns_nrmse &lt;- ggplot() +\n    geom_line(data = summary_s_n10 %&gt;%\n                mutate(rmse = sqrt(mse)), \n            aes(x = time,  y = rmse), \n            color = \"#004144\") +\n    geom_line(data = summary_s_n15 %&gt;%\n                mutate(rmse = sqrt(mse)), \n            aes(x = time,  y = rmse), \n            color = \"#005d5d\") +\n    geom_line(data = summary_s_n20 %&gt;%\n                mutate(rmse = sqrt(mse)), \n            aes(x = time,  y = rmse), \n            color = \"#007d79\") +\n    geom_line(data = summary_s_n25 %&gt;%\n                mutate(rmse = sqrt(mse)), \n            aes(x = time,  y = rmse), \n            color = \"#009d9a\") +\n    geom_line(data = summary_s_n30 %&gt;%\n                mutate(rmse = sqrt(mse)), \n            aes(x = time,  y = rmse), \n            color = \"#08bdba\") +\n  theme_bw() + # theme(legend.position = \"bottom\") + \n  ylab(\"MAE\") + xlab(\"Anchor Time\")\n\ns_nbias\n\n\n\n\n\n\nCodes_nrmse",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single Anchor Time</span>"
    ]
  },
  {
    "objectID": "04_simulation.html",
    "href": "04_simulation.html",
    "title": "\n4  Simulation\n",
    "section": "",
    "text": "4.1 Goal for this chapter",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Simulation</span>"
    ]
  },
  {
    "objectID": "04_simulation.html#goal-for-this-chapter",
    "href": "04_simulation.html#goal-for-this-chapter",
    "title": "\n4  Simulation\n",
    "section": "",
    "text": "simulation study for single and lmm\nfunctions to pull out the results\n\nfigures\n\nbias\nrmse\ncoverage\n\n\nYou are unreal!",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Simulation</span>"
    ]
  },
  {
    "objectID": "04_simulation.html#pullout-functions",
    "href": "04_simulation.html#pullout-functions",
    "title": "\n4  Simulation\n",
    "section": "\n4.2 pullout functions",
    "text": "4.2 pullout functions\nneed to be adjusted based on the simulation we run.\n\nCodepullout &lt;- function(location,\n                    filename) {\n  load(paste0(location, filename))\n  sgl_n &lt;- sgl_n10 %&gt;% \n    map(\"centiles_observed\") %&gt;% \n    map_dfr(~mutate(., bias = abs(actual - `50`),\n           mse = (actual - `50`)^2,\n           cov50 = ifelse(actual &lt;= `75` & actual &gt;= `25`, 1, 0),\n           cov80 = ifelse(actual &lt;= `90` & actual &gt;= `10`, 1, 0),\n           cov90 = ifelse(actual &lt;= `95` & actual &gt;= `5`, 1, 0)) %&gt;% \n             colMeans()) %&gt;%\n    dplyr::select(bias, mse, cov50, cov80, cov90) %&gt;%\n    colMeans()\n    lmm &lt;- list()\n    lmm$bias &lt;-  lmm_test %&gt;%\n      transmute(bias = abs(pred - ht)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$mse &lt;-  lmm_test %&gt;%\n      transmute(mse = (pred - ht)^2) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov50&lt;- lmm_test %&gt;%\n      transmute(cov50 = ifelse(ht &lt;= centile75 & ht &gt;= centile25, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov80&lt;- lmm_test %&gt;%\n      transmute(cov80  = ifelse(ht &lt;= centile90 & ht &gt;= centile10, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov90&lt;- lmm_test %&gt;%\n      transmute(cov90 = ifelse(ht &lt;= centile95 & ht &gt;= centile05, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n\n  return(list(sgl_n = sgl_n,\n              lmm = lmm))\n}",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Simulation</span>"
    ]
  },
  {
    "objectID": "04_simulation.html#lmm-is-better-than-sgl",
    "href": "04_simulation.html#lmm-is-better-than-sgl",
    "title": "\n4  Simulation\n",
    "section": "\n4.3 LMM is better than SGL",
    "text": "4.3 LMM is better than SGL\nthe linear mixed model is doing better than single time prediction. as we can see in the first paper.\n\nCodefolder1 &lt;- \"single_t11\"\nfolder2 &lt;- \"results\"\n\nfile_location &lt;- paste0(\"results/\", folder1, \"/\", folder2, \"/\")\nfiles &lt;- list.files(path = file_location, pattern = \".Rdata\")\nfiles\nsim_ss &lt;- map_dfr(files, ~pullout(file_location, .),\n                     .progress = list(type = \"iterator\",\n                                      format = \"Calculating {cli::pb_bar} {cli::pb_percent}\",\n                                      clear = TRUE))\nsim_ss &lt;- sim_ss %&gt;%\n  mutate(term = rep(c(\"bias\", \"mse\", \"coverage50\", \n                      \"coverage80\", \"coverage90\"), \n                    length(files)))\n\nsave(sim_ss, file = paste0(\"results/04_single_simulation_\", Sys.Date(), \".Rdata\"))\n\n\n\nCodeload(\"results/04_single_simulation_2024-08-08.Rdata\")\ndata &lt;- sim_ss %&gt;% \n  mutate(sgl_n = as.numeric(sgl_n),\n         lmm = as.numeric(lmm)) %&gt;%\n  pivot_longer(cols = -term,\n               names_to = \"method\",\n               values_to = \"values\") %&gt;% \n  mutate(method = factor(method, levels = c(\"sgl_n\", \"lmm\"))) %&gt;%\n  filter(method %in% c(\"sgl_n\",  \"lmm\"))\n\n\n\nCodelibrary(latex2exp)\nbias_plot &lt;- data %&gt;%\n  filter(term == \"bias\") %&gt;%\n  ggplot(aes(x = method, y = as.numeric(values), group = factor(method))) +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"MAE\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n# bias_plot\n\n\n\nCodermse_plot &lt;- data %&gt;%\n  filter(term == \"mse\") %&gt;% \n  mutate(values = sqrt(as.numeric(values))) %&gt;%\n  ggplot(aes(x = method, y = as.numeric(values), group = method)) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"RMSE\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n# rmse_plot\n\n\n\nCodecov50_plot &lt;- data %&gt;% \n  filter(term == \"coverage50\") %&gt;% \n  ggplot(aes(x = method, y = as.numeric(values)),\n         group = method) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"50% CR\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n\n## the tableau is in the ggthemes\n# cov50_plot\n\n\n\nCodecov80_plot &lt;- data %&gt;% \n          filter(term == \"coverage80\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n         labs(x = NULL) +\n          labs(y = \"80% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n# cov80_plot\n\n\n\nCodecov90_plot &lt;- data %&gt;% \n          filter(term == \"coverage90\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n          labs(x = NULL) +\n          labs(y = \"90% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n# cov90_plot\n\n\n\nCodebias_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_1bias_\", Sys.Date(), \".png\"))\nrmse_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_2rmse_\", Sys.Date(), \".png\"))\ncov50_plot + \n  geom_hline(yintercept = 0.5, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_3cov50_\", Sys.Date(), \".png\"))\ncov80_plot +\n  geom_hline(yintercept = 0.8, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_4cov80_\", Sys.Date(), \".png\"))\ncov90_plot +\n  geom_hline(yintercept = 0.9, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_5cov90_\", Sys.Date(), \".png\"))\n\n\n\nCodelibrary(ggpubr)\n\nfigure1 &lt;- ggarrange(bias_plot, \n                    # + theme(axis.text.x=element_blank()),\n                    rmse_plot,\n                    # + theme(axis.text.x=element_blank()),\n                    # cov50_plot,\n                    # + theme(axis.text.x=element_blank()), \n                    cov90_plot +\n                      geom_hline(yintercept = 0.9,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()),\n                    ncol = 1, nrow = 3)\n\nfigure1\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_6combine_\", Sys.Date(), \".png\"))",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Simulation</span>"
    ]
  },
  {
    "objectID": "02_flowchart.html",
    "href": "02_flowchart.html",
    "title": "\n2  Flowchart\n",
    "section": "",
    "text": "2.1 Goal for this chapter",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Flowchart</span>"
    ]
  },
  {
    "objectID": "02_flowchart.html#goal-for-this-chapter",
    "href": "02_flowchart.html#goal-for-this-chapter",
    "title": "\n2  Flowchart\n",
    "section": "",
    "text": "flowchart\nYou are epic!",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Flowchart</span>"
    ]
  },
  {
    "objectID": "02_flowchart.html#flowchart-for-algorithm",
    "href": "02_flowchart.html#flowchart-for-algorithm",
    "title": "\n2  Flowchart\n",
    "section": "\n2.2 flowchart for algorithm",
    "text": "2.2 flowchart for algorithm\n\nCodeflowchart2 &lt;- DiagrammeR::grViz(\n\"digraph graph2 {\n\ngraph [layout = dot]\n\n# node definitions with substituted label text\nnode [shape = rectangle, width = 4, fillcolor = Biege]\na [label = \n  &lt;\n    &lt;b&gt; &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n    &lt;b&gt;Training process with two step model: &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n    &nbsp; &#8226; 1. Brokenstick model prediction with only time as covariate internal knots at c(3, 6, 9, 12) &lt;br ALIGN = 'LEFT'/&gt;\n    &nbsp; &#8226; 2. Linear model prediction with the demographics and baseline outcome &lt;br ALIGN = 'LEFT'/&gt;\n    &gt;\n  ]\n  \nb [label = \n  &lt;\n    &lt;b&gt; &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n    &lt;b&gt;Estimation: &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n    &nbsp; &#8226; Predict based on Linear model &lt;br ALIGN = 'LEFT'/&gt;\n     &nbsp; &nbsp; &nbsp; demographics and baseline outcome to predict for a new target individual model &lt;br ALIGN = 'LEFT'/&gt;\n    &gt;\n  ]\n  \nc [label =\n &lt;\n   &lt;b&gt; &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n   &lt;b&gt;Matching: &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n   &nbsp; &#8226; Single-time matching based on cross validation anchor at 11 and matching number 25/30 &lt;br ALIGN = 'LEFT'/&gt;\n  &gt;\n ]\n \n \nd [label =\n &lt;\n   &lt;b&gt; &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n   &lt;b&gt;Predicting: &lt;/b&gt; &lt;br ALIGN = 'CENTER'/&gt; \n   &nbsp; &#8226; Median for predictive trajectory &lt;br ALIGN = 'LEFT'/&gt;\n    &nbsp; &#8226; Centiles for predictive intervals &lt;br ALIGN = 'LEFT'/&gt;\n  &gt;\n ]\n\n# These are the main nodes at top of graph\n\n  a -&gt; b -&gt; c -&gt; d\n}\n\")\n\n\n## see the flowchart\nflowchart2\n\n\n\n\nCode# flowchart1 %&gt;%\n#   export_svg() %&gt;%\n#   read_xml() %&gt;%\n#   write_xml(paste0(\"~/Desktop/project/plmlmm/paper/figure/00_plmlmm_data_cleaning\", Sys.Date(), \".svg\"))\n\n## save the flowchart\nflowchart2 %&gt;%\n  export_svg() %&gt;% \n  charToRaw() %&gt;% \n  rsvg_png(paste0(\"figures/02_plmlmm_step_algorithm_\", Sys.Date(), \".png\"))\n# export_graph(flowchart,\n# file_name = \"final/flowchart_graph.png\",\n# file_type = \"png\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Flowchart</span>"
    ]
  },
  {
    "objectID": "01_table1.html#goal-for-this-chapter",
    "href": "01_table1.html#goal-for-this-chapter",
    "title": "\n1  Table1\n",
    "section": "",
    "text": "table1\nYou are funkadelic!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Table1</span>"
    ]
  },
  {
    "objectID": "01_table1.html#making-table1",
    "href": "01_table1.html#making-table1",
    "title": "\n1  Table1\n",
    "section": "\n1.2 Making table1",
    "text": "1.2 Making table1\n\nCodeload(\"R/train_test.rda\")\ntrain0 &lt;- train %&gt;%\n  group_by(id) %&gt;%\n  summarize(group = unique(group),\n            sex = unique(sex),\n            genotype = unique(genotype),\n            ethnic = unique(ethnic),\n            visitn = n(),\n            ht_min = min(ht),\n            age_min = min(age),\n            age_max = max(age),\n            age_diff = age_max - age_min)\n\ntest0 &lt;- test %&gt;% \n  group_by(id) %&gt;%\n  summarize(group = unique(group),\n            sex = unique(sex),\n            genotype = unique(genotype),\n            ethnic = unique(ethnic),\n            visitn = n(),\n            ht_min = min(ht),\n            age_min = min(age),\n            age_max = max(age),\n            age_diff = age_max - age_min)\n\ndata1 &lt;- rbind(train0, test0)\n\n\n## table0 contains all the information about demgo for total\ntable0 &lt;- data1 %&gt;%\n  unique() %&gt;%\n  dplyr::select(-id) %&gt;%\n  mutate(ethnic = case_when(ethnic == 1 ~ \"Hispanic\",\n                            ethnic == 2 ~ \"Non-Hispanic\"),\n         # race = case_when(race == 1 ~ \"White\",\n         #                  race != 1 ~ \"Other\"),\n         sex = case_when(sex == \"F\" ~ \"Female\",\n                         sex == \"M\" ~ \"Male\"),\n         age_diff = age_max - age_min) %&gt;%\n  dplyr::select(group,\n                Genotype = genotype,\n                Gender = sex,\n                # Race = race,\n                Ethnicity = ethnic,\n                \"Visit number\" = visitn,\n                \"Age baseline\" = age_min, \n                \"Age final\" = age_max, \n                \"Follow up years\" = age_diff,\n                # \"Height mean\" = h_mean, \n                \"Height baseline\" = ht_min) %&gt;% \n  # \"Weight mean\" = w_mean,\n  # \"Weight baseline\" = w_min\n  ## select all the variables for table1\n  tbl_summary(by = group) %&gt;%\n  ## just display all the variables in one column\n  modify_header(label = \"**Characteristics**\") %&gt;%\n  # update the column header\n  bold_labels() %&gt;%\n  italicize_labels() %&gt;%\n  # as.data.frame()\n  as_flex_table() %&gt;%\n  flextable::bold(part = \"header\") %&gt;%\n  ## auto adjust the column widths\n  flextable::autofit()\n\n## table1 contains information of dataset grouped as training and testing\n# table1 &lt;- data1 %&gt;%\n#   unique() %&gt;%\n#   dplyr::select(-id) %&gt;%\n#   mutate(ethnic = case_when(ethnic == 1 ~ \"Hispanic\",\n#                             ethnic == 2 ~ \"Non-Hispanic\"),\n#          # race = case_when(race == 1 ~ \"White\",\n#          #                  race != 1 ~ \"Other\"),\n#          sex = case_when(sex == \"F\" ~ \"Female\",\n#                          sex == \"M\" ~ \"Male\"),\n#          age_diff = age_max - age_min) %&gt;% \n#   dplyr::select(group,\n#                 Genotype = genotype,\n#                 Gender = sex,\n#                 Ethnicity = ethnic,\n#                 \"Visit number\" = visitn,\n#                 # \"Age mean\" = age_mean, \n#                 \"Age baseline\" = age_min, \n#                 \"Age final\" = age_max, \n#                 \"Follow up years\" = age_diff,\n#                 # \"Height mean\" = h_mean, \n#                 \"Height baseline\" = h_min) %&gt;% \n#   # \"Weight mean\" = w_mean,\n#   # \"Weight baseline\" = w_min)\n#   ## select all the variables for table1\n#   tbl_summary(by = group) %&gt;%\n#   ## just display all the variables in one column\n#   modify_header(label = \"**Characteristics**\") %&gt;%\n#   # update the column header\n#   bold_labels() %&gt;%\n#   add_p() %&gt;%\n#   italicize_labels()\n\n\n## table1 contains information of dataset grouped as training and testing\ntable2 &lt;- data1 %&gt;%\n  unique() %&gt;%\n  dplyr::select(-id) %&gt;%\n  mutate(ethnic = case_when(ethnic == 1 ~ \"Hispanic\",\n                            ethnic == 2 ~ \"Non-Hispanic\"),\n         # race = case_when(race == 1 ~ \"White\",\n         #                  race != 1 ~ \"Other\"),\n         sex = case_when(sex == \"F\" ~ \"Female\",\n                         sex == \"M\" ~ \"Male\"),\n         age_diff = age_max - age_min) %&gt;% \n  dplyr::select(group,\n                Genotype = genotype,\n                Gender = sex,\n                # Race = race,\n                Ethnicity = ethnic,\n                \"Visit number\" = visitn,\n                # \"Age mean\" = age_mean, \n                \"Age baseline\" = age_min, \n                # \"Age final\" = age_max, \n                \"Follow up years\" = age_diff,\n                # \"Height mean\" = h_mean, \n                \"Height baseline\" = ht_min) %&gt;% \n  tbl_summary(by = group,\n              statistic = list(all_continuous() ~ \"{mean} ({sd})\") ) %&gt;%\n  ## just display all the variables in one column\n  modify_header(label = \"**Characteristics**\") %&gt;%\n  # update the column header\n  bold_labels() %&gt;%\n  add_overall(last = TRUE) %&gt;%\n  italicize_labels() \n\ntable0\n\n\n\n\n\nCharacteristics\ntesting, N = 4571\ntraining, N = 9131\n\n\n\nGenotype\n\n\n\n\nOne allele F508del\n158 (35%)\n319 (35%)\n\n\nOthers or Unknown\n66 (14%)\n84 (9.2%)\n\n\nTwo alleles F508del\n233 (51%)\n510 (56%)\n\n\nGender\n\n\n\n\nFemale\n240 (53%)\n453 (50%)\n\n\nMale\n217 (47%)\n460 (50%)\n\n\nEthnicity\n\n\n\n\nHispanic\n19 (4.3%)\n24 (2.7%)\n\n\nNon-Hispanic\n421 (96%)\n853 (97%)\n\n\nUnknown\n17\n36\n\n\nVisit number\n45 (31, 62)\n45 (32, 59)\n\n\nAge baseline\n3.14 (3.06, 3.23)\n3.13 (3.05, 3.22)\n\n\nAge final\n12.7 (10.2, 16.0)\n12.9 (10.3, 15.9)\n\n\nFollow up years\n9.6 (7.0, 12.8)\n9.7 (7.1, 12.7)\n\n\nHeight baseline\n93.7 (91.8, 97.0)\n94.0 (91.1, 96.8)\n\n\n1n (%); Median (IQR)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Table1</span>"
    ]
  },
  {
    "objectID": "05_lmm.html",
    "href": "05_lmm.html",
    "title": "\n5  Linear Model\n",
    "section": "",
    "text": "Codeload(\"R/train_test.rda\")\nall &lt;- rbind(train, test) %&gt;%\n  as.data.frame()\n\n\n\nCodectrl &lt;- lmeControl(opt = 'optim')\n\n\nfit1 &lt;-  lme(ht ~ bs(time, degree = 3, knots = 10) * sex + genotype - 1,\n              random = ~ 1| id,\n              control = ctrl,\n              data = all)\nglance1 &lt;- broom.mixed::glance(fit1) %&gt;%\n  mutate(fixed = \"bs(time, knots = 10, degree = 3) * sex + genotype\",\n         random = \"1 | id\")\n\nfit2 &lt;-  lme(ht ~ bs(time, degree = 3, knots = 10) * sex + genotype - 1,\n              random = ~ 1 + time| id,\n              control = ctrl,\n              data = all)\nglance2 &lt;- broom.mixed::glance(fit2) %&gt;%\n  mutate(fixed = \"bs(time, knots = 10, degree = 3) * sex + genotype\",\n         random = \"1 + time| id\")\n\nfit3 &lt;-  lme(ht ~ bs(time, degree = 3, knots = c(5, 10)) * sex + genotype - 1,\n              random = ~ 1| id,\n              control = ctrl,\n              data = all)\nglance3 &lt;- broom.mixed::glance(fit3) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10), degree = 3) * sex + genotype\",\n         random = \"1 | id\")\n\nfit4 &lt;-  lme(ht ~ bs(time, degree = 3, knots = c(5, 10)) * sex + genotype - 1,\n              random = ~ 1 + time| id,\n              control = ctrl,\n              data = all)\nglance4 &lt;- broom.mixed::glance(fit4) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10), degree = 3) * sex + genotype\",\n         random = \"1 + time| id\")\n\nfit5 &lt;-  lme(ht ~ bs(time, degree = 3, knots = c(5, 10, 15)) * sex + genotype - 1,\n              random = ~ 1| id,\n              control = ctrl,\n              data = all)\nglance5 &lt;- broom.mixed::glance(fit5) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype\",\n         random = \"1 + time| id\")\n\nfit6 &lt;-  lme(ht ~ bs(time, degree = 3, knots = c(5, 10, 15)) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 4, degree = 3, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance6 &lt;- broom.mixed::glance(fit6) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 4, degree = 3)|id\")\n\nfit7 &lt;-  lme(ht ~ bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 5, degree = 3, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance7 &lt;- broom.mixed::glance(fit7) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 5, degree = 3)| id\")\n\n# df 3 = intercept 0 + knots 3\nfit8 &lt;-  lme(ht ~ bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 4, degree = 2, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance8 &lt;- broom.mixed::glance(fit8) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 4, degree  = 2)|id\")\n\n## df 4 = linear 0 + knots 3\nfit9 &lt;-  lme(ht ~ bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 4, degree = 1, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance9 &lt;- broom.mixed::glance(fit9) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 4, degree = 1)| id\")\n\n## df 5 = quadratic 2 + knots 3\nfit10 &lt;-  lme(ht ~ bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 5, degree = 2, intercept = FALSE)| id,\n              control = ctrl,\n              data = train)\nglance10 &lt;- broom.mixed::glance(fit10) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(10, 12, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 5, degree = 2)| id\")\n\nfit11 &lt;-  lme(ht ~ bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 5, degree = 2, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance11 &lt;- broom.mixed::glance(fit11) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 5, degree = 2)| id\")\n\nfit12 &lt;-  lme(ht ~ bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype - 1,\n              random = ~ 1 + bs(time, df = 4, degree = 1, intercept = FALSE)| id,\n              control = ctrl,\n              data = all)\nglance12 &lt;- broom.mixed::glance(fit11) %&gt;%\n  mutate(fixed = \"bs(time, knots = c(5, 10, 15), degree = 3) * sex + genotype\",\n         random = \"1 + bs(time, df = 4, degree = 1)| id\")\n\n\n\nCoderesult &lt;- rbind(glance1, glance2, glance3, \n                glance4, glance5, glance6,\n                glance7, glance8, glance9, \n                glance10, glance11, glance12) %&gt;%\n  as.data.frame() %&gt;%\n  dplyr::select(-nobs, -sigma, -logLik) %&gt;%\n  dplyr::select(fixed, random, everything()) %&gt;%\n  arrange(AIC)\n\nlibrary(xtable)\n\nresult\n\n\n  \n\n\nCodeprint(xtable(result, type = \"latex\"), \n      file = paste0(\"figures/05_model_selection_aic\", Sys.Date(), \".tex\"))",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Linear Model</span>"
    ]
  },
  {
    "objectID": "06_overall.html",
    "href": "06_overall.html",
    "title": "\n6  Overall\n",
    "section": "",
    "text": "Codeload(\"R/train_test.rda\")\nall &lt;- rbind(train, test) %&gt;%\n  as.data.frame()\n\n\n\nCodeplot &lt;- all %&gt;% \n  ggplot(aes(x = time, y = ht, group = id, color = sex)) +\n  geom_line(alpha = 0.2, color = \"grey\") +\n  geom_smooth(aes(group = sex)) +\n  theme_bw() +\n  labs(x = \"Time (yr)\") +\n  labs(y = \"Height (cm)\") +\n  # ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  scale_color_manual(values = c(\"#eb1e2c\", \"#00A9FF\")) +\n  ## facet_wrap(\"group\") +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title = element_text(size = 16)) +\n  theme(legend.position = \"none\") \n\nplot\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/06_supp_figure_overall\", Sys.Date(), \".png\"))",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Overall</span>"
    ]
  },
  {
    "objectID": "04_simulation25.html",
    "href": "04_simulation25.html",
    "title": "\n5  Simulation25\n",
    "section": "",
    "text": "5.1 Goal for this chapter",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Simulation25</span>"
    ]
  },
  {
    "objectID": "04_simulation25.html#goal-for-this-chapter",
    "href": "04_simulation25.html#goal-for-this-chapter",
    "title": "\n5  Simulation25\n",
    "section": "",
    "text": "simulation study for single and lmm\nfunctions to pull out the results\n\nfigures\n\nbias\nrmse\ncoverage\n\n\nYou are unreal!",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Simulation25</span>"
    ]
  },
  {
    "objectID": "04_simulation25.html#pullout-functions",
    "href": "04_simulation25.html#pullout-functions",
    "title": "\n5  Simulation25\n",
    "section": "\n5.2 pullout functions",
    "text": "5.2 pullout functions\nneed to be adjusted based on the simulation we run.\n\nCodepullout &lt;- function(location,\n                    filename) {\n  load(paste0(location, filename))\n  sgl_n &lt;- sgl_n25 %&gt;% \n    map(\"centiles_observed\") %&gt;% \n    map_dfr(~mutate(., bias = abs(actual - `50`),\n           mse = (actual - `50`)^2,\n           cov50 = ifelse(actual &lt;= `75` & actual &gt;= `25`, 1, 0),\n           cov80 = ifelse(actual &lt;= `90` & actual &gt;= `10`, 1, 0),\n           cov90 = ifelse(actual &lt;= `95` & actual &gt;= `5`, 1, 0)) %&gt;% \n             colMeans()) %&gt;%\n    dplyr::select(bias, mse, cov50, cov80, cov90) %&gt;%\n    colMeans()\n    lmm &lt;- list()\n    lmm$bias &lt;-  lmm_test %&gt;%\n      transmute(bias = abs(pred - ht)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$mse &lt;-  lmm_test %&gt;%\n      transmute(mse = (pred - ht)^2) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov50&lt;- lmm_test %&gt;%\n      transmute(cov50 = ifelse(ht &lt;= centile75 & ht &gt;= centile25, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov80&lt;- lmm_test %&gt;%\n      transmute(cov80  = ifelse(ht &lt;= centile90 & ht &gt;= centile10, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n    lmm$cov90&lt;- lmm_test %&gt;%\n      transmute(cov90 = ifelse(ht &lt;= centile95 & ht &gt;= centile05, 1, 0)) %&gt;%\n      unlist() %&gt;%\n      mean()\n\n  return(list(sgl_n = sgl_n,\n              lmm = lmm))\n}",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Simulation25</span>"
    ]
  },
  {
    "objectID": "04_simulation25.html#lmm-is-better-than-sgl",
    "href": "04_simulation25.html#lmm-is-better-than-sgl",
    "title": "\n5  Simulation25\n",
    "section": "\n5.3 LMM is better than SGL",
    "text": "5.3 LMM is better than SGL\nthe linear mixed model is doing better than single time prediction. as we can see in the first paper.\n\nCodefolder1 &lt;- \"single_t11_n30\"\nfolder2 &lt;- \"results\"\n\nfile_location &lt;- paste0(\"results/\", folder1, \"/\", folder2, \"/\")\nfiles &lt;- list.files(path = file_location, pattern = \".Rdata\")\n# files\nsim_ss &lt;- map_dfr(files, ~pullout(file_location, .),\n                     .progress = list(type = \"iterator\",\n                                      format = \"Calculating {cli::pb_bar} {cli::pb_percent}\",\n                                      clear = TRUE))\nsim_ss &lt;- sim_ss %&gt;%\n  mutate(term = rep(c(\"bias\", \"mse\", \"coverage50\", \n                      \"coverage80\", \"coverage90\"), \n                    length(files)))\n\nsave(sim_ss, file = paste0(\"results/04_single_simulation_n25\", Sys.Date(), \".Rdata\"))\n\n\n\nCodeload(\"results/04_single_simulation_n252024-08-08.Rdata\")\ndata &lt;- sim_ss %&gt;% \n  mutate(sgl_n = as.numeric(sgl_n),\n         lmm = as.numeric(lmm)) %&gt;%\n  pivot_longer(cols = -term,\n               names_to = \"method\",\n               values_to = \"values\") %&gt;% \n  mutate(method = factor(method, levels = c(\"sgl_n\", \"lmm\"))) %&gt;%\n  filter(method %in% c(\"sgl_n\",  \"lmm\"))\n\n\n\nCodelibrary(latex2exp)\nbias_plot &lt;- data %&gt;%\n  filter(term == \"bias\") %&gt;%\n  ggplot(aes(x = method, y = as.numeric(values), group = factor(method))) +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"MAE\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n# bias_plot\n\n\n\nCodermse_plot &lt;- data %&gt;%\n  filter(term == \"mse\") %&gt;% \n  mutate(values = sqrt(as.numeric(values))) %&gt;%\n  ggplot(aes(x = method, y = as.numeric(values), group = method)) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"RMSE\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n# rmse_plot\n\n\n\nCodecov50_plot &lt;- data %&gt;% \n  filter(term == \"coverage50\") %&gt;% \n  ggplot(aes(x = method, y = as.numeric(values)),\n         group = method) +\n  geom_point(aes(color = method)) +\n  geom_boxplot(aes(fill = method)) +\n  theme_bw() +\n  labs(x = NULL) +\n  labs(y = \"50% CR\") +\n  ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n  ## so far the best color composition\n  ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n  ## facet_wrap(\"group\") +\n  theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n\n## the tableau is in the ggthemes\n# cov50_plot\n\n\n\nCodecov80_plot &lt;- data %&gt;% \n          filter(term == \"coverage80\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n         labs(x = NULL) +\n          labs(y = \"80% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n# cov80_plot\n\n\n\nCodecov90_plot &lt;- data %&gt;% \n          filter(term == \"coverage90\") %&gt;%\n          ggplot(aes(x = method, y = as.numeric(values)),\n                 group = method) +\n          geom_point(aes(color = method)) +\n          geom_boxplot(aes(fill = method)) +\n          theme_bw() +\n          labs(x = NULL) +\n          labs(y = \"90% CR\") +\n          ggthemes::scale_fill_tableau(\"Jewel Bright\") + \n          ## so far the best color composition\n          ggthemes::scale_colour_tableau(\"Jewel Bright\") +\n          ## facet_wrap(\"group\") +\n          theme(legend.position = \"none\") +\n  scale_x_discrete(labels = c(\"sgl_n\" = parse(text = latex2exp::TeX(\"$S_{\\\\kappa = 10}$\")),\n                              \"lmm\" = \"LMM\")) +\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.title.y = element_text(size = 16)) \n          ## the tableau is in the ggthemes\n# cov90_plot\n\n\n\nCodebias_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_1bias_\", Sys.Date(), \".png\"))\nrmse_plot\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_2rmse_\", Sys.Date(), \".png\"))\ncov50_plot + \n  geom_hline(yintercept = 0.5, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_3cov50_\", Sys.Date(), \".png\"))\ncov80_plot +\n  geom_hline(yintercept = 0.8, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_4cov80_\", Sys.Date(), \".png\"))\ncov90_plot +\n  geom_hline(yintercept = 0.9, linetype=\"dashed\", color = \"indianred\")\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_5cov90_\", Sys.Date(), \".png\"))\n\n\n\nCodelibrary(ggpubr)\n\nfigure1 &lt;- ggarrange(bias_plot, \n                    # + theme(axis.text.x=element_blank()),\n                    rmse_plot,\n                    # + theme(axis.text.x=element_blank()),\n                    # cov50_plot,\n                    # + theme(axis.text.x=element_blank()), \n                    cov90_plot +\n                      geom_hline(yintercept = 0.9,\n                                 linetype = \"dashed\", \n                                 color = \"indianred\"),\n                    # + theme(axis.text.x=element_blank()),\n                    ncol = 1, nrow = 3)\n\nfigure1\n\n\n\n\n\n\nCodeggsave(paste0(\"figures/single_five_6combine_\", Sys.Date(), \".png\"))",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Simulation25</span>"
    ]
  }
]